@model LogOnViewModel

@using (Html.BeginForm("SignIn", "Authentication"))
{
    <fieldset class="form">
        <legend>Sign In Form</legend>

        @Html.AntiForgeryToken()
        @Html.Hidden("ReturnUrl", ViewData[Constants.ReturnUrlViewDataKey])
        @Html.Hidden("LinkingAccount", Model.External != null)
        @if (Model.External != null)
        {
            @Html.HiddenFor(m => m.External.ProviderAccountNoun)
            @Html.HiddenFor(m => m.External.AccountName)
            @Html.HiddenFor(m => m.External.FoundExistingUser)
        }
        @Html.ValidationSummaryFor("SignIn")

        <div class="form-field form-field-full">
            @Html.LabelFor(m => m.SignIn.UserNameOrEmail)
            @Html.EditorFor(m => m.SignIn.UserNameOrEmail)
            @Html.ValidationMessageFor(m => m.SignIn.UserNameOrEmail)
        </div>

        <div class="form-field form-field-full">
            @Html.LabelFor(m => m.SignIn.Password)
            @Html.EditorFor(m => m.SignIn.Password)
            @Html.ValidationMessageFor(m => m.SignIn.Password)
        </div>

        <p id="signIn-lostpassword">
            @Html.ActionLink("Lost your Password?", "ForgotPassword", "Users")
        </p>

        <img src="@Url.Content("~/content/images/required.png")" alt="Blue border on left means required." />


        <button class="btn btn-big signin-authprovider-link" type="submit" title="Sign in with a NuGet.org Account">
            <i class="signin-authprovider-icon icon-signin"></i>
            Sign in with a NuGet.org Account
        </button>

        @if (Model.External == null)
        {
            <h3 id="signin-providermessage">Or use an external account to sign in</h3>
            <ul id="signin-providerlist">
                @foreach (var provider in Model.Providers)
                {
                    <li class="signin-authprovider">
                        <a class="btn btn-big signin-authprovider-link" href="@Url.Action("Authenticate", new { provider = provider.ProviderName, returnUrl = ViewData[Constants.ReturnUrlViewDataKey] })">
                            <i class="@provider.UI.IconCssClass signin-authprovider-icon"></i>
                            @provider.UI.SignInMessage
                        </a>
                    </li>
                }
            </ul>
        }
    </fieldset>
}